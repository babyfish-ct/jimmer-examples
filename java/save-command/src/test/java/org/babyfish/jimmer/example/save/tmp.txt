/**
 * Recommended learning sequence: 7
 *
 *
 * SaveModeTest -> IncompleteObjectTest -> ManyToOneTest ->
 * OneToManyTest -> ManyToManyTest -> RecursiveTest -> [Current: TriggerTest]
 */
public class TriggerTest extends AbstractMutationWithTriggerTest {
    
    @Test
    public void test() {
        
        jdbc("insert into book_store(id, name) values(?, ?)", 1L, "MANNING")
        jdbc(
            "insert into book(id, name, edition, price, store_id) values" +
                "(?, ?, ?, ?, ?)," +
                "(?, ?, ?, ?, ?)",
            1L, "Microservices Security in Action", 1, BigDecimal("33.59"), 1L,
            2L, "LINQ in Action", 1, BigDecimal("21.59"), 1L
        )
        jdbc(
            ("insert into author(id, first_name, last_name, gender) values" +
                "(?, ?, ?, ?), (?, ?, ?, ?)," +
                "(?, ?, ?, ?), (?, ?, ?, ?), (?, ?, ?, ?)"),
            1L, "Prabath", "Siriwardena", "M",
            2L, "Nuwan", "Dias", "M",
            3L, "Fabrice", "Marguerie", "M",
            4L, "Steve", "Eichert", "M",
            5L, "Jim", "Wooley", "M"
        )
        
        jdbc(
            ("insert into book_author_mapping(book_id, author_id) values" +
                "(?, ?), (?, ?), " +
                "(?, ?), (?, ?), (?, ?)"),
            1L, 1L, 1L, 2L,
            2L, 3L, 2L, 4L, 2L, 5L
        )
        
        sql().save(
                BookStoreDraft.$.produce(turing -> {
                    turing.setName("TURING");
                    turing.addIntoBooks(security -> {
                        security.setName("Microservices Security in Action");
                        security.setEdition(1);
                        security.setPrice(new BigDecimal("43.59"));
                        security.addIntoAuthors(author -> author.setId(100L));
                        security.addIntoAuthors(author -> author.setId(200L));
                        security.addIntoAuthors(author -> author.setId(300L));
                    });
                    turing.addIntoBooks(linq -> {
                        linq.setName("LINQ in Action");
                        linq.setEdition(1);
                        linq.setPrice(new BigDecimal("31.59"));
                        linq.addIntoAuthors(author -> author.setId(400L));
                        linq.addIntoAuthors(author -> author.setId(500L));
                    });
                })
        );

        /*
         * This example focuses on triggers, so we don't assert SQL statements,
         * but directly assert events
         */
        
        assertEvents(

            "The entity \"org.babyfish.jimmer.example.save.model.BookStore\" is changed, " +
                "old: null, " +
                "new: {\"id\":100,\"name\":\"TURING\"}",

            "The entity \"org.babyfish.jimmer.example.save.model.Book\" is changed, " +
                "old: {\"id\":1,\"name\":\"Microservices Security in Action\",\"edition\":1,\"price\":33.59,\"store\":{\"id\":1}}, " +
                "new: {\"id\":1,\"name\":\"Microservices Security in Action\",\"edition\":1,\"price\":43.59,\"store\":{\"id\":100}}",

            "The association \"org.babyfish.jimmer.example.save.model.Book.store\" is changed, " +
                "source id: 1, " +
                "detached target id: 1, " +
                "attached target id: 100",

            "The association \"org.babyfish.jimmer.example.save.model.BookStore.books\" is changed, " +
                "source id: 1, " +
                "detached target id: 1, " +
                "attached target id: null",

            "The association \"org.babyfish.jimmer.example.save.model.BookStore.books\" is changed, " +
                "source id: 100, " +
                "detached target id: null, " +
                "attached target id: 1",

            "The entity \"org.babyfish.jimmer.example.save.model.Book\" is changed, " +
                "old: {\"id\":2,\"name\":\"LINQ in Action\",\"edition\":1,\"price\":21.59,\"store\":{\"id\":1}}, " +
                "new: {\"id\":2,\"name\":\"LINQ in Action\",\"edition\":1,\"price\":31.59,\"store\":{\"id\":100}}",

            "The association \"org.babyfish.jimmer.example.save.model.Book.store\" is changed, " +
                "source id: 2, " +
                "detached target id: 1, " +
                "attached target id: 100",

            "The association \"org.babyfish.jimmer.example.save.model.BookStore.books\" is changed, " +
                "source id: 1, " +
                "detached target id: 2, " +
                "attached target id: null",

            "The association \"org.babyfish.jimmer.example.save.model.BookStore.books\" is changed, " +
                "source id: 100, " +
                "detached target id: null, " +
                "attached target id: 2",

            "The association \"org.babyfish.jimmer.example.save.model.Book.authors\" is changed, " +
                "source id: 1, " +
                "detached target id: null, " +
                "attached target id: 3",

            "The association \"org.babyfish.jimmer.example.save.model.Author.books\" is changed, " +
                "source id: 3, " +
                "detached target id: null, " +
                "attached target id: 1",

            "The association \"org.babyfish.jimmer.example.save.model.Book.authors\" is changed, " +
                "source id: 2, " +
                "detached target id: 3, " +
                "attached target id: null",

            "The association \"org.babyfish.jimmer.example.save.model.Author.books\" is changed, " +
                "source id: 3, " +
                "detached target id: 2, " +
                "attached target id: null"
        )
    }
}