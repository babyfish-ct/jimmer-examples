/*
 * 1. If any other Kotlin code is modified,
 * you can directly click the `Run` button of Intellij
 *
 * 2. Otherwise, the project must be rebuilt
 */

export org.babyfish.jimmer.sql.example.kt.model.BookStore
    -> package org.babyfish.jimmer.sql.example.kt.service.dto

input BookStoreInput {

    /*
     * #allScalars: All scalar fields of `BookStore` and `BaseEntity`
     *
     * #allScalars(this)/#allScalars(BookStore): All scalar fields of `BookStore`, exclude `BaseEntity`
     */
    #allScalars(this)
}

input CompositeBookStoreInput {

    /*
     * #allScalars: All scalar fields of `Book` and `BaseEntity`
     *
     * #allScalars(this)/#allScalars(Book): All scalar fields of `Book`, exclude `BaseEntity`
     */
    #allScalars(this)
    -id // Remove id

    // Long association
    books {
        #allScalars(this) // or `#allScalars(Book)`
        -id // Remove id

        // Short association (which is more recommended for many-to-many)
        id(authors) as authorIds
    }
}